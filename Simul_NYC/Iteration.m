% Before running, load 'dataset_NYC.mat'

% Function that generates and uses the new pool
function [THT,ZN,RG,ACPT]=Iteration(w,poi,Alternatives,Points_NTA,Proportion)

% Function inputs
% w: number of simulations conducted
% poi: size of POIs' pool required to be considered
% Alternatives: original set of POIs collected by Yelp API (n=1012), including rating, XY coordinates, and alternative-specific constant
% Points_NTA: random points generated by QGIS (1000 points per pseudo_NTA zone)
% Proportion: list of proportions of synthesized population of 35 pseudo-NTA zones that started their trips within Manhattan between 4-7pm

% Required parameters
T=500;      % number of total trials in a simulation
tau=200;    % lenght of learning period in a simulation

% Optional parameters: use this if randomization is not necessary
% ALPHA    % set of exploration factors (alpha>0)
% lambda  % mean passenger arrival rate
% pcap   % passenger capacity on shuttle vehicle
% ttc     % converter from distance (km) to time (min), pace

% Prepare matrices
IND=zeros(w,4);         % Indices used in simulations
THT=zeros(poi+2,w);     % Estimated constant and coefficient set
ZN=zeros(T,w);          % Chosen zones at trials in simulations
RG=zeros(T,w);          % Regret at trials in simulations
ACPT=zeros(T,w);        % Acceptance (1)/Rejection (0) at trials in simulations
UTIL=zeros(T,2*w);      % Utilities (Compare recommended and the best)
PASS=zeros(1500,w);     % Passenger set (# of passenger varies)
CANDS=zeros(poi,w);     % IDs of alternatives used in a run

% Simulations for randomized parameters
for j=1:w
    % Generation of POIs' and passengers' pool
    [ALTS,PassPool] = PoolGen(poi,Alternatives,Points_NTA,Proportion);
    
    % Randomization of simulation parameters
    alpha=randi(10)/2;
    lambda=randi(5); 
    ttc=0.1; % const
    gamma=1+rand/2;
    vehcap=3+randi(5);
    
    % Conduct RecMOD algorithm
    [Thetat,Arms,Regret,Y,MaxUtil,ChosenUtil]=RecMOD_NYC(alpha,T,tau,lambda,vehcap,ttc,gamma,poi,ALTS,PassPool);
    
    % Arrange output
    IND(j,:)=[alpha,lambda,vehcap,ttc*gamma];
    THT(:,j) = Thetat';
    ZN(:,j) = Arms(:,1);
    RG(:,j) = Regret(:,1);
    ACPT(:,j) = Y(:,1);
    UTIL(:,(2*j-1)) = MaxUtil(:,1);     
    UTIL(:,(2*j)) = ChosenUtil(:,1);    
    CANDS(:,j)=ALTS(:,1);
    for k=1:size(PassPool,1)
        PASS(k,j)=PassPool(k,1);
    end
end
flname1="result11111.xlsx";
xlswrite(flname1,IND,"ind");
xlswrite(flname1,THT,"theta");
xlswrite(flname1,ZN,"arm");
xlswrite(flname1,RG,"regret");
xlswrite(flname1,ACPT,"accept");
xlswrite(flname1,UTIL,"utility");
xlswrite(flname1,CANDS,"poi");
xlswrite(flname1,PASS,"passengers");